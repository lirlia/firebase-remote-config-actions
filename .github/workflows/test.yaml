name: test

on:
  workflow_call: {}
  workflow_dispatch: {}

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: firebase-remote-config-actions
  WORKLOAD_IDENTITY_PROVIDER: projects/37652434530/locations/global/workloadIdentityPools/firebase-remote-config-actions/providers/github
  REMOTE_CONFIG_PATH: /tmp/remote_config_values.json
  SERVICE_ACCOUNT_EMAIL: github-action@firebase-remote-config-actions.iam.gserviceaccount.com

jobs:
  test-validate-success:
    name: test validate success
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          create_credentials_file: true

      - name: generate test json
        run: |
          cat <<EOF > $REMOTE_CONFIG_PATH
          {
            "version": {
              "versionNumber": "1",
              "updateOrigin": "ADMIN_SDK_NODE",
              "updateType": "INCREMENTAL_UPDATE",
              "updateUser": {
                "email": "github-action@firebase-remote-config-actions.iam.gserviceaccount.com"
              }
            },
            "conditions": [
              {
                "name": "1.0.0",
                "expression": "app.version.>=(['1.0.0'])",
                "tagColor": "ORANGE"
              },
              {
                "name": "2.0.0",
                "expression": "app.version.>=(['2.0.0'])",
                "tagColor": "BLUE"
              }
            ],
            "parameters": {
              "test": {
                "defaultValue": {
                  "value": "test value"
                },
                "valueType": "STRING"
              }
            },
            "parameterGroups": {
              "Feature Flags": {
                "parameters": {
                  "useOssLicensesFlag": {
                    "defaultValue": {
                      "value": "false"
                    },
                    "conditionalValues": {
                      "1.0.0": {
                        "value": "true"
                      }
                    },
                    "description": "this is a flag",
                    "valueType": "BOOLEAN"
                  }
                }
              }
            }
          }

      - id: check-validate
        uses: ./
        with:
          command: validate
          template-file-path: ${{ env.REMOTE_CONFIG_PATH }}
          service-account-email: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: check validate success
        run: |
          [[ ${{ steps.check-validate.outputs.is-valid }} == 'true' ]] && exit 0 || exit 1

  test-validate-failure:
    name: test validate failure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          create_credentials_file: true

      - name: generate test json
        run: |
          # missing condition
          cat <<EOF > $REMOTE_CONFIG_PATH
          {
            "version": {
              "versionNumber": "1",
              "updateOrigin": "ADMIN_SDK_NODE",
              "updateType": "INCREMENTAL_UPDATE",
              "updateUser": {
                "email": "github-action@firebase-remote-config-actions.iam.gserviceaccount.com"
              }
            },
            "parameterGroups": {
              "Feature Flags": {
                "parameters": {
                  "useOssLicensesFlag": {
                    "defaultValue": {
                      "value": "false"
                    },
                    "conditionalValues": {
                      "1.0.0": {
                        "value": "true"
                      }
                    },
                    "description": "this is a flag",
                    "valueType": "BOOLEAN"
                  }
                }
              }
            }
          }

      - id: check-validate
        uses: ./
        with:
          command: validate
          template-file-path: ${{ env.REMOTE_CONFIG_PATH }}
          service-account-email: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: check validate failed
        run: |
          [[ ${{ steps.check-validate.outputs.is-valid }} == 'false' ]] && exit 0 || exit 1

  test-diff-publish:
    name: test diff publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          create_credentials_file: true

      - name: generate test json
        run: |
          cat <<EOF > $REMOTE_CONFIG_PATH
          {
            "version": {
              "versionNumber": "${{ github.run_number }}",
              "updateOrigin": "ADMIN_SDK_NODE",
              "updateType": "INCREMENTAL_UPDATE",
              "updateUser": {
                "email": "github-action@firebase-remote-config-actions.iam.gserviceaccount.com"
              }
            },
            "conditions": [
              {
                "name": "1.0.0",
                "expression": "app.version.>=(['1.0.0'])",
                "tagColor": "ORANGE"
              },
              {
                "name": "2.0.0",
                "expression": "app.version.>=(['2.0.0'])",
                "tagColor": "BLUE"
              }
            ],
            "parameters": {
              "test": {
                "defaultValue": {
                  "value": "test value"
                },
                "valueType": "STRING"
              }
            },
            "parameterGroups": {
              "Feature Flags": {
                "parameters": {
                  "useOssLicensesFlag": {
                    "defaultValue": {
                      "value": "false"
                    },
                    "conditionalValues": {
                      "1.0.0": {
                        "value": "true"
                      }
                    },
                    "description": "this is a flag",
                    "valueType": "BOOLEAN"
                  }
                }
              }
            }
          }

      - id: check-diff
        uses: ./
        with:
          command: diff
          template-file-path: ${{ env.REMOTE_CONFIG_PATH }}
          service-account-email: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - id: check-diff-contents
        # has version diff
        run: |
          echo "${{ steps.check-diff.outputs.diff }}" > /tmp/diff
          grep '+    versionNumber: ${{ github.run_number }}' /tmp/diff && exit 0 || exit 1

      - id: check-publish
        uses: ./
        with:
          command: publish
          template-file-path: ${{ env.REMOTE_CONFIG_PATH }}
          service-account-email: ${{ env.SERVICE_ACCOUNT_EMAIL }}

  test-check-dist:
    name: Check dist/
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup

      - name: Build dist/ Directory
        id: build
        run: npm run bundle

      # This will fail the workflow if the PR wasn't created by Dependabot.
      - name: Compare Directories
        id: diff
        run: |
          if [ "$(git diff --ignore-space-at-eol --text dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build. See status below:"
            git diff --ignore-space-at-eol --text dist/
            exit 1
          fi

      # If `dist/` was different than expected, and this was not a Dependabot
      # PR, upload the expected version as a workflow artifact.
      - if: ${{ failure() && steps.diff.outcome == 'failure' }}
        name: Upload Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
